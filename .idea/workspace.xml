<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="NONE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="68371057-438e-49e3-a253-dcec33f98a15" name="Changes" comment="Refactor: Migrate to Firestore and Enhance Testability&#10;&#10;This commit completes the migration from MongoDB to Firestore and improves the overall testability of the application.&#10;&#10;Key Changes:&#10;&#10;*   **Firestore Migration:**&#10;    *   `ScrapingJobRepository` now uses Firestore via `FirestoreScrapingJobRepository`.&#10;    *   A custom `ScrapingJobMapper` is introduced for serialization/deserialization of `ScrapingJob` objects to and from Firestore documents, replacing generic Firestore service usage for this entity.&#10;    *   Removed `MongoDBManager` and related MongoDB dependencies.&#10;    *   Updated `DbCredentials` to only include `firestoreProjectId`.&#10;    *   `FirestoreDatabase` now ensures FirebaseApp is initialized only once.&#10;    *   `Database` interface's `delete` method now returns a `Boolean`.&#10;    *   `FirestoreService` updated to align with the `Database` interface change.&#10;*   **Environment Configuration:**&#10;    *   `EnvironmentManager` now uses a new `EnvConfig` class to load configurations from environment variables, `.env` file, system properties, and command-line arguments in a hierarchical manner.&#10;    *   `Application.kt` now uses `EnvironmentManager.load()` for centralized configuration loading.&#10;*   **Testing Improvements:**&#10;    *   Introduced `testKoinModule` for setting up a test-specific Koin dependency graph, enabling better isolation for tests.&#10;    *   `GeneralRoutesTest` now uses `testApplication` with the `testKoinModule` for integration testing Ktor routes.&#10;    *   Added a Firestore integration test endpoint (`/test/firestore`) and corresponding test in `GeneralRoutesTest`.&#10;    *   `BaseTest` now initializes `EnvironmentManager` for test environments.&#10;*   **Routing and Job Management:**&#10;    *   Removed `VacancyRoutes.kt` (which was a list of targets).&#10;    *   Created `VacancyTargets.kt` to store the default list of `ScrapeTarget`s.&#10;    *   Introduced `DefaultJobsRoutes.kt` with an endpoint `/api/default-jobs/add-all` to add all predefined `VacancyTargets` to the job queue.&#10;    *   `ServerRouting` updated to include `DefaultJobsRoutes`.&#10;    *   `JobQueueManager` no longer depends on `MongoDBManager` and uses `repository.getAll()` instead of `repository.readAll()`.&#10;*   **Model Updates:**&#10;    *   `ScraperTypeConfig` updated with `result`, `createdAt`, `source`, and `error` fields to better align with Firestore data.&#10;    *   `ScrapingJob` model's `uuid` field no longer has `@BsonId` annotation.&#10;*   **Code Cleanup &amp; Minor Refinements:**&#10;    *   Removed unused `jobSources` from the (now deleted) `VacancyRoutes.kt`.&#10;    *   Added a `warning` method to the `Logger` interface and `ConsoleLogger` implementation.&#10;    *   Updated `.gitignore` to ignore `service-account-key.json` in `src/main/resources`.&#10;    *   Minor cleanup in `SystemMonitor.kt` and `ScraperTypeConfigRepository.kt`.&#10;    *   Corrected `Server.module` to accept an optional Koin module for testing.">
      <change beforePath="$PROJECT_DIR$/src/main/resources/static/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/static/index.html" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <task path="$PROJECT_DIR$/app">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="ktor-scrap" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="ktor-scrap" type="f1a62948:ProjectNode" />
                <item name="Run Configurations" type="7b0102dc:RunConfigurationsNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Kotlin Data Class" />
        <option value="Kotlin File" />
        <option value="Kotlin Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2jKa0EHdqlUSE3mg52FbLeiWTN4" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Docker.Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
    &quot;Gradle.ApplicationTest.executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.Build crudfather.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Build ktor-hello.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Build ktor-scrap.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.DynamicRoutesTest.executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.DynamicRoutesTest.testCreateDynamicDocument.executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.DynamicRoutesTest.testCreateDynamicRoutes.executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.DynamicRoutesTest.testDeleteDynamicRoutes.executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.DynamicRoutesTest.testDynamicRoutes.executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.DynamicRoutesTest.testGetAllDynamicDocuments.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.DynamicRoutesTest.testGetDynamicDocumentById.executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.DynamicRoutesTest.testReadDynamicRoutes.executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.DynamicRoutesTest.testUpdateDynamicDocument.executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.DynamicRoutesTest.testUpdateDynamicRoutes.executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.GeneralRoutesTest.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.GeneralRoutesTest.testLiveRoute.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Load Gradle Dependencies.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ModelRoutesTest.executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.ModelRoutesTest.testCreateModel.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ModelRoutesTest.testGetAllModels.executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.ModelRoutesTest.testGetModelById.executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.MyTestClass.executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.ServerRoutingTesting.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ServerRoutingTesting.testCreateModel.executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.Upgrade Gradle wrapper.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.crudfather [:clean].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.crudfather [app:tasks].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.crudfather [assembleDist].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.crudfather [assemble].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.crudfather [buildEnvironment].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.crudfather [buildFatJar].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.crudfather [build].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.crudfather [dokkaHtmlJar].executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.crudfather [dokkaHtml].executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.crudfather [init].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.crudfather [javadoc].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.crudfather [ktlintFormat].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.crudfather [runFatJar].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.crudfather [runShadow].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.crudfather [run].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.crudfather [startShadowScripts].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.crudfather [test].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ktor-hello [:clean].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ktor-hello [build].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ktor-hello [installDist].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ktor-hello [ktlintFormat].executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.ktor-hello [run].executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.ktor-scrap [:clean].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ktor-scrap [buildFatJar].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ktor-scrap [build].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ktor-scrap [test].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ktorhello [run].executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.ktorhello [test].executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.run with env local.executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.run with env.executor&quot;: &quot;Debug&quot;,
    &quot;Gradle.run without env.executor&quot;: &quot;Debug&quot;,
    &quot;JAR Application.app.jar.executor&quot;: &quot;Debug&quot;,
    &quot;JAR Application.crudfather-0.0.6-javadoc.jar.executor&quot;: &quot;Run&quot;,
    &quot;JAR Application.fat.jar.executor&quot;: &quot;Debug&quot;,
    &quot;Kotlin script (Beta).build.gradle.kts.executor&quot;: &quot;Debug&quot;,
    &quot;Kotlin script (Beta).settings.gradle.kts.executor&quot;: &quot;Debug&quot;,
    &quot;Kotlin.ApiTestKt.executor&quot;: &quot;Debug&quot;,
    &quot;Kotlin.ApplicationKt.executor&quot;: &quot;Debug&quot;,
    &quot;Kotlin.MainKt (1).executor&quot;: &quot;Debug&quot;,
    &quot;Kotlin.MainKt.executor&quot;: &quot;Debug&quot;,
    &quot;Kotlin.ModelDefinitionKt.executor&quot;: &quot;Debug&quot;,
    &quot;Kotlin.ModelSchemeRepositoryKt.executor&quot;: &quot;Debug&quot;,
    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;dart.analysis.tool.window.visible&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/lenyk/projects/Kotlin/onelenykproject/ktor-scrap&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Dependencies&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;DockerRegistry&quot;,
    &quot;show.migrate.to.gradle.popup&quot;: &quot;false&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/main/kotlin/dev/onelenyk/ktorscrap/features/vacanciesandroid/model" />
      <recent name="$PROJECT_DIR$/src/main/kotlin/dev/onelenyk/crudfather" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/app/src/main/kotlin" />
      <recent name="$PROJECT_DIR$/app/src" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/main/resources" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/src/main/" />
      <recent name="$PROJECT_DIR$/src/main/kotlin/dev/onelenyk/ktorhello/features" />
      <recent name="$PROJECT_DIR$/src/main/kotlin/dev/onelenyk/ktorhello/domain" />
    </key>
    <key name="MoveKotlinTopLevelDeclarationsDialog.RECENTS_KEY">
      <recent name="dev.onelenyk.crudfather.domain.models" />
      <recent name="" />
      <recent name="dev.onelenyk.crudfather.utils" />
      <recent name="dev.onelenyk.crudfather.data.dynamic" />
      <recent name="dev.onelenyk.crudfather.app.routing" />
    </key>
    <key name="CopyKotlinDeclarationDialog.RECENTS_KEY">
      <recent name="dev.onelenyk.ktorscrap.features.vacanciesandroid.model" />
      <recent name="dev.onelenyk.crudfather.repository" />
      <recent name="" />
      <recent name="dev.onelenyk.crudfather" />
    </key>
    <key name="K2MoveDeclarationsDialog.RECENT_PACKAGE_KEY">
      <recent name="dev.onelenyk.ktorscrap.domain.model" />
      <recent name="dev.onelenyk.ktorscrap.presentation" />
      <recent name="dev.onelenyk.ktorscrap.features.vacanciesandroid.routing" />
      <recent name="dev.onelenyk.ktorhello.domain.models" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="gradle app:tasks" />
      <command value="gradle runFatJar" />
      <command value="gradle assemble" />
      <command value="gradle run" />
      <command value="gradle ktlintFormat" />
      <command value="gradle installDist" />
      <command value="gradle build" />
      <command value="gradle buildFatJar" />
      <command value="gradle :clean" />
      <command value="gradle test" />
    </option>
  </component>
  <component name="RunManager" selected="Gradle.run without env">
    <configuration default="true" type="AppleRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" IS_LOCATION_SIMULATION_SUPPORTED="false" IS_LOCATION_SIMULATION_ALLOWED="true" APPLICATION_LANGUAGE="IDELaunchSchemeLanguageUseSystemLanguage" APPLICATION_REGION="" MAKE_ACTIVE="TRUE" SHOULD_DEBUG_EXTENSIONS="false">
      <embedded_app_extension_list />
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="GeneralRoutesTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="env">
          <map>
            <entry key="DEVELOPER_DIR" value="/Applications/Xcode.app/Contents/Developer" />
          </map>
        </option>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;GeneralRoutesTest&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="ktor-scrap [test]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="env">
          <map>
            <entry key="DEVELOPER_DIR" value="/Applications/Xcode.app/Contents/Developer" />
          </map>
        </option>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="test" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="run with env local" type="GradleRunConfiguration" factoryName="Gradle">
      <ExternalSystemSettings>
        <option name="env">
          <map>
            <entry key="DEVELOPER_DIR" value="/Applications/Xcode.app/Contents/Developer" />
          </map>
        </option>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="run" />
            <option value="--args=&quot;--env=PORT==8080 --env=DB_USERNAME==admin --env=DB_PASSWORD==password --env=DB_CONNECTION==@192.168.110.13:27017&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="run with env" type="GradleRunConfiguration" factoryName="Gradle">
      <ExternalSystemSettings>
        <option name="env">
          <map>
            <entry key="DEVELOPER_DIR" value="/Applications/Xcode.app/Contents/Developer" />
          </map>
        </option>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="run" />
            <option value="--args=&quot;--env=PORT==8080 --env=DB_USERNAME==onelenyk --env=DB_PASSWORD==ZvENwF0TzcsirUIC --env=DB_CONNECTION==@cluster0.gmqkpcg.mongodb.net/?retryWrites=true&amp;w=majority&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="run without env" type="GradleRunConfiguration" factoryName="Gradle">
      <ExternalSystemSettings>
        <option name="env">
          <map>
            <entry key="DEVELOPER_DIR" value="/Applications/Xcode.app/Contents/Developer" />
          </map>
        </option>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="run" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="ApplicationKt" type="JetRunConfigurationType" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="dev.onelenyk.ktorscrap.presentation.ApplicationKt" />
      <module name="ktor-scrap.main" />
      <shortenClasspath name="NONE" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Dockerfile" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker Scrapper">
      <deployment type="dockerfile">
        <settings>
          <option name="sourceFilePath" value="Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker Scrapper">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.Dockerfile" />
      <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
      <item itemvalue="Gradle.run with env" />
      <item itemvalue="Gradle.run with env local" />
      <item itemvalue="Gradle.run without env" />
      <item itemvalue="Gradle.GeneralRoutesTest" />
      <item itemvalue="Gradle.ktor-scrap [test]" />
      <item itemvalue="Kotlin.ApplicationKt" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.GeneralRoutesTest" />
        <item itemvalue="Gradle.ktor-scrap [test]" />
        <item itemvalue="Kotlin.ApplicationKt" />
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
        <item itemvalue="Docker.Dockerfile" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="68371057-438e-49e3-a253-dcec33f98a15" name="Changes" comment="" />
      <created>1721137999530</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1721137999530</updated>
    </task>
    <task id="LOCAL-00001" summary="Initial commit">
      <option name="closed" value="true" />
      <created>1722195821508</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1722195821508</updated>
    </task>
    <task id="LOCAL-00002" summary="Initial commit">
      <option name="closed" value="true" />
      <created>1722200734981</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1722200734981</updated>
    </task>
    <task id="LOCAL-00003" summary="chore: add .env to gitignore">
      <option name="closed" value="true" />
      <created>1722457096384</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1722457096384</updated>
    </task>
    <task id="LOCAL-00004" summary="docs: update README with installation and usage instructions &amp; update test case">
      <option name="closed" value="true" />
      <created>1722460598206</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1722460598206</updated>
    </task>
    <task id="LOCAL-00005" summary="chore: update project version to actual">
      <option name="closed" value="true" />
      <created>1722460676028</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1722460676028</updated>
    </task>
    <task id="LOCAL-00006" summary="Initialize project with Ktor setup and MongoDB integration&#10;&#10;This commit includes the basic structure for a Kotlin-based Ktor server. It sets up dependency injection with Koin, MongoDB integration, a routing framework, and basic utility endpoints. Additional configuration includes Gradle scripts, Dokka documentation tasks, and .editorconfig for consistent code styling.">
      <option name="closed" value="true" />
      <created>1745738288177</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1745738288177</updated>
    </task>
    <task id="LOCAL-00007" summary="Add support for Java 17, update README, and improve server logs&#10;&#10;Updated the project to require Java 17 and revised the README with improved documentation and setup instructions. Enhanced the server initialization with detailed logging and added support for creating a runnable fat JAR for easier deployments.">
      <option name="closed" value="true" />
      <created>1745746331643</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1745746331643</updated>
    </task>
    <task id="LOCAL-00008" summary="Update README, enhance logging, and streamline setup">
      <option name="closed" value="true" />
      <created>1746304841686</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1746304841686</updated>
    </task>
    <task id="LOCAL-00009" summary="Refactor route registration in UtilRoutes&#10;&#10;Simplify route registration logic by removing redundant helper functions and using a more concise approach. Merged route definitions directly into the `Routing.apply` block to improve readability and maintainability.">
      <option name="closed" value="true" />
      <created>1747144082723</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1747144082723</updated>
    </task>
    <task id="LOCAL-00010" summary="Refactor route registration in UtilRoutes">
      <option name="closed" value="true" />
      <created>1748097754617</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1748097754617</updated>
    </task>
    <task id="LOCAL-00011" summary="Refactor Android vacancy scraper with new models and logger">
      <option name="closed" value="true" />
      <created>1748113395013</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1748113395013</updated>
    </task>
    <task id="LOCAL-00012" summary="Add Dou.ua scraper and integrate into vacancy scraper&#10;&#10;This commit introduces a new scraper for Dou.ua and integrates it into the existing Android vacancy scraper.&#10;&#10;- Added `DouScraper.kt` to handle scraping job listings from Dou.ua.&#10;- Updated `Main.kt` to include DouScraper for several companies (Promova, BetterMe, AMO, Boosta).&#10;- Temporarily commented out DjinniScraper for focused testing.&#10;- Includes logging for scraping stages and individual job parsing.">
      <option name="closed" value="true" />
      <created>1748114988836</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1748114988836</updated>
    </task>
    <task id="LOCAL-00013" summary="Add Dou.ua scraper and integrate into vacancy scraper&#10;&#10;This commit introduces a new scraper for Dou.ua and integrates it into the existing Android vacancy scraper.&#10;&#10;- Added `DouScraper.kt` to handle scraping job listings from Dou.ua.&#10;- Updated `Main.kt` to include DouScraper for several companies (Promova, BetterMe, AMO, Boosta).&#10;- Temporarily commented out DjinniScraper for focused testing.&#10;- Includes logging for scraping stages and individual job parsing.">
      <option name="closed" value="true" />
      <created>1748119307070</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1748119307070</updated>
    </task>
    <task id="LOCAL-00014" summary="Add Dou.ua scraper and integrate into vacancy scraper&#10;&#10;This commit introduces a new scraper for Dou.ua and integrates it into the existing Android vacancy scraper.&#10;&#10;- Added `DouScraper.kt` to handle scraping job listings from Dou.ua.&#10;- Updated `Main.kt` to include DouScraper for several companies (Promova, BetterMe, AMO, Boosta).&#10;- Temporarily commented out DjinniScraper for focused testing.&#10;- Includes logging for scraping stages and individual job parsing.">
      <option name="closed" value="true" />
      <created>1748203149397</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1748203149397</updated>
    </task>
    <task id="LOCAL-00015" summary="Refactor: Apply consistent formatting and import order&#10;&#10;This commit standardizes code formatting and import statement order across multiple files. Changes include:&#10;&#10;- Consistent trailing commas in constructor parameters and argument lists.&#10;- Standardized import order (e.g., `ScrapeOutput` before `ScrapeTarget`).&#10;- Removal of redundant newlines and spacing.&#10;&#10;These changes primarily affect files within the `features.vacanciesandroid` package and `app.routing` / `app.di`. No functional changes are introduced.">
      <option name="closed" value="true" />
      <created>1748381357571</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1748381357571</updated>
    </task>
    <task id="LOCAL-00016" summary="Refactor: Centralize vacancy filtering in ScrapeOutput&#10;&#10;This commit introduces a static factory method `ScrapeOutput.withFiltering` to centralize the logic for filtering vacancies based on `target.needsFiltering`.&#10;&#10;All scrapers (`AmoScraper`, `BreezyScraper`, `DjinniScraper`, `DouScraper`, `LeverScraper`, `NovaDigitalScraper`, `SampleScraper`) have been updated to use this new method, removing redundant filtering logic from each scraper.&#10;&#10;Additionally, trailing whitespace has been removed from several files for consistency.">
      <option name="closed" value="true" />
      <created>1748403794489</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1748403794489</updated>
    </task>
    <task id="LOCAL-00017" summary="feat: Add Dockerfile and .dockerignore&#10;&#10;This commit introduces a Dockerfile for building and running the application in a container.&#10;&#10;- The Dockerfile uses a multi-stage build:&#10;    - Stage 1: `gradle:8.2-jdk21` for building the fat JAR.&#10;    - Stage 2: `eclipse-temurin:21-jre-alpine` for running the application.&#10;- Creates a non-root user `appuser` for running the application.&#10;- Exposes port 8080.&#10;- Sets the entrypoint to run the `app.jar`.&#10;&#10;A `.dockerignore` file is also added to exclude unnecessary files and directories from the Docker build context.">
      <option name="closed" value="true" />
      <created>1748404050352</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1748404050352</updated>
    </task>
    <task id="LOCAL-00018" summary="Refactor: Simplify Dockerfile for Render deployment&#10;&#10;This commit updates the Dockerfile to align with Render's build and deployment process.&#10;&#10;Key changes:&#10;- Switched from a multi-stage build to a single-stage build using `openjdk:17-jre-slim`. Render handles the JAR building process separately.&#10;- Removed manual JAR copying from a build stage; now directly copies `build/libs/fat.jar`.&#10;- Removed non-root user creation (`appuser`, `appgroup`) as Render handles this.&#10;- Updated port exposure to use `$PORT` environment variable as expected by Render, instead of a hardcoded `8080`.&#10;- Changed `ENTRYPOINT` to `CMD` for running the application.">
      <option name="closed" value="true" />
      <created>1748404612142</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1748404612142</updated>
    </task>
    <task id="LOCAL-00019" summary="Refactor: Simplify Dockerfile for Render deployment&#10;&#10;This commit updates the Dockerfile to align with Render's build and deployment process.&#10;&#10;Key changes:&#10;- Switched from a multi-stage build to a single-stage build using `openjdk:17-jre-slim`. Render handles the JAR building process separately.&#10;- Removed manual JAR copying from a build stage; now directly copies `build/libs/fat.jar`.&#10;- Removed non-root user creation (`appuser`, `appgroup`) as Render handles this.&#10;- Updated port exposure to use `$PORT` environment variable as expected by Render, instead of a hardcoded `8080`.&#10;- Changed `ENTRYPOINT` to `CMD` for running the application.">
      <option name="closed" value="true" />
      <created>1748460465369</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1748460465369</updated>
    </task>
    <option name="localTasksCounter" value="20" />
    <servers />
  </component>
  <component name="Vcs.Log.History.Properties">
    <option name="COLUMN_ID_ORDER">
      <list>
        <option value="Default.Root" />
        <option value="Default.Author" />
        <option value="Default.Date" />
        <option value="Default.Subject" />
      </list>
    </option>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Initial commit" />
    <MESSAGE value="chore: add .env to gitignore" />
    <MESSAGE value="docs: update README with installation and usage instructions &amp; update test case" />
    <MESSAGE value="chore: update project version to actual" />
    <MESSAGE value="Add initial project setup for Ktor-based CRUD application&#10;&#10;This commit introduces the foundational structure for a Ktor-based server application. Key additions include Gradle build configuration, Koin dependency injection, MongoDB integration, and routing setup with utility endpoints. Also added essential project files like `.editorconfig`, `.gitignore`, and `README.md`." />
    <MESSAGE value="Initialize Ktor CRUD project with essential setup&#10;&#10;Added project configuration for a Ktor-based CRUD application, including Gradle build scripts, dependency management, and MongoDB integration. Implemented basic server setup, DI using Koin, utility routes, and initial tests." />
    <MESSAGE value="Initialize project with Ktor setup and MongoDB integration&#10;&#10;This commit includes the basic structure for a Kotlin-based Ktor server. It sets up dependency injection with Koin, MongoDB integration, a routing framework, and basic utility endpoints. Additional configuration includes Gradle scripts, Dokka documentation tasks, and .editorconfig for consistent code styling." />
    <MESSAGE value="Add support for Java 17, update README, and improve server logs&#10;&#10;Updated the project to require Java 17 and revised the README with improved documentation and setup instructions. Enhanced the server initialization with detailed logging and added support for creating a runnable fat JAR for easier deployments." />
    <MESSAGE value="Update README, enhance logging, and streamline setup" />
    <MESSAGE value="Refactor route registration in UtilRoutes&#10;&#10;Simplify route registration logic by removing redundant helper functions and using a more concise approach. Merged route definitions directly into the `Routing.apply` block to improve readability and maintainability." />
    <MESSAGE value="Refactor route registration in UtilRoutes" />
    <MESSAGE value="Refactor Android vacancy scraper with new models and logger" />
    <MESSAGE value="Add Dou.ua scraper and integrate into vacancy scraper&#10;&#10;This commit introduces a new scraper for Dou.ua and integrates it into the existing Android vacancy scraper.&#10;&#10;- Added `DouScraper.kt` to handle scraping job listings from Dou.ua.&#10;- Updated `Main.kt` to include DouScraper for several companies (Promova, BetterMe, AMO, Boosta).&#10;- Temporarily commented out DjinniScraper for focused testing.&#10;- Includes logging for scraping stages and individual job parsing." />
    <MESSAGE value="Refactor: Apply consistent formatting and import order&#10;&#10;This commit standardizes code formatting and import statement order across multiple files. Changes include:&#10;&#10;- Consistent trailing commas in constructor parameters and argument lists.&#10;- Standardized import order (e.g., `ScrapeOutput` before `ScrapeTarget`).&#10;- Removal of redundant newlines and spacing.&#10;&#10;These changes primarily affect files within the `features.vacanciesandroid` package and `app.routing` / `app.di`. No functional changes are introduced." />
    <MESSAGE value="Refactor: Centralize vacancy filtering in ScrapeOutput&#10;&#10;This commit introduces a static factory method `ScrapeOutput.withFiltering` to centralize the logic for filtering vacancies based on `target.needsFiltering`.&#10;&#10;All scrapers (`AmoScraper`, `BreezyScraper`, `DjinniScraper`, `DouScraper`, `LeverScraper`, `NovaDigitalScraper`, `SampleScraper`) have been updated to use this new method, removing redundant filtering logic from each scraper.&#10;&#10;Additionally, trailing whitespace has been removed from several files for consistency." />
    <MESSAGE value="feat: Add Dockerfile and .dockerignore&#10;&#10;This commit introduces a Dockerfile for building and running the application in a container.&#10;&#10;- The Dockerfile uses a multi-stage build:&#10;    - Stage 1: `gradle:8.2-jdk21` for building the fat JAR.&#10;    - Stage 2: `eclipse-temurin:21-jre-alpine` for running the application.&#10;- Creates a non-root user `appuser` for running the application.&#10;- Exposes port 8080.&#10;- Sets the entrypoint to run the `app.jar`.&#10;&#10;A `.dockerignore` file is also added to exclude unnecessary files and directories from the Docker build context." />
    <MESSAGE value="Refactor: Simplify Dockerfile for Render deployment&#10;&#10;This commit updates the Dockerfile to align with Render's build and deployment process.&#10;&#10;Key changes:&#10;- Switched from a multi-stage build to a single-stage build using `openjdk:17-jre-slim`. Render handles the JAR building process separately.&#10;- Removed manual JAR copying from a build stage; now directly copies `build/libs/fat.jar`.&#10;- Removed non-root user creation (`appuser`, `appgroup`) as Render handles this.&#10;- Updated port exposure to use `$PORT` environment variable as expected by Render, instead of a hardcoded `8080`.&#10;- Changed `ENTRYPOINT` to `CMD` for running the application." />
    <option name="LAST_COMMIT_MESSAGE" value="Refactor: Simplify Dockerfile for Render deployment&#10;&#10;This commit updates the Dockerfile to align with Render's build and deployment process.&#10;&#10;Key changes:&#10;- Switched from a multi-stage build to a single-stage build using `openjdk:17-jre-slim`. Render handles the JAR building process separately.&#10;- Removed manual JAR copying from a build stage; now directly copies `build/libs/fat.jar`.&#10;- Removed non-root user creation (`appuser`, `appgroup`) as Render handles this.&#10;- Updated port exposure to use `$PORT` environment variable as expected by Render, instead of a hardcoded `8080`.&#10;- Changed `ENTRYPOINT` to `CMD` for running the application." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="kotlin-line">
          <url>file://$PROJECT_DIR$/src/main/kotlin/dev/onelenyk/ktorscrap/presentation/env/EnvironmentManager.kt</url>
          <line>22</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="kotlin-line">
          <url>file://$PROJECT_DIR$/src/main/kotlin/dev/onelenyk/ktorscrap/presentation/env/EnvironmentManager.kt</url>
          <line>20</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="kotlin-line">
          <url>file://$PROJECT_DIR$/src/main/kotlin/dev/onelenyk/ktorscrap/domain/usecase/JobQueueManager.kt</url>
          <line>42</line>
          <option name="timeStamp" value="12" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="kotlin-line">
          <url>file://$PROJECT_DIR$/src/main/kotlin/dev/onelenyk/ktorscrap/data/db/FirestoreService.kt</url>
          <line>16</line>
          <option name="timeStamp" value="15" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="kotlin-line">
          <url>file://$PROJECT_DIR$/src/main/kotlin/dev/onelenyk/ktorscrap/data/db/FirestoreService.kt</url>
          <line>15</line>
          <option name="timeStamp" value="16" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="kotlin-line">
          <url>file://$PROJECT_DIR$/src/main/kotlin/dev/onelenyk/ktorscrap/domain/usecase/JobQueueManager.kt</url>
          <line>41</line>
          <option name="timeStamp" value="21" />
        </line-breakpoint>
      </breakpoints>
      <default-breakpoints>
        <breakpoint type="dart-exception" />
      </default-breakpoints>
    </breakpoint-manager>
    <pin-to-top-manager>
      <pinned-members>
        <PinnedItemInfo parentTag="org.jsoup.nodes.Element" memberName="childNodes" />
      </pinned-members>
    </pin-to-top-manager>
    <watches-manager>
      <configuration name="JetRunConfigurationType">
        <watch expression="created.toBsonDocument()" language="kotlin" />
      </configuration>
      <configuration name="GradleRunConfiguration">
        <watch expression="sampleDocumentJson" />
      </configuration>
    </watches-manager>
  </component>
</project>